# configuration for replica exchange scripts

# run simulation: 
#   mkdir output
#   (cd output; mkdir 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)
#   mpirun -np 16 -hostfile hostfile $bindir/namd2 +replicas 16 job0.conf +stdout output/%d/job0.%d.log
# the number of MPI ranks (-np) must be a multiple of the number of replicas (+replicas)

# to continue:
#   mpirun -np 16 -hostfile hostfile $bindir/namd2 +replicas 16 job1.conf +stdout output/%d/job1.%d.log
# increase num_runs below if job completed, or use latest restartXXX.tcl file available
# be sure to increment jobX for +stdout option on command line

# view in VMD:  source job0.conf; source ../show_replicas.vmd
# add continued:   source job1.conf; source ../show_replicas.vmd
# show both:  vmd -e load_all.vmd

# sort into single-temperature trajectories:
#   $bindir/sortreplicas output/%s/stretch_alanin.job0 16 10
#   $bindir/sortreplicas output/%s/stretch_alanin.job1 16 10

set num_replicas 21
set temperature 310
set steps_per_run 500
set num_runs 10000
# num_runs should be divisible by runs_per_frame * frames_per_restart
set runs_per_frame 1
set frames_per_restart 10
set namd_config_file "glpt.conf"
set output_root "../output/%s/move" ; # directories must exist
set input_root "../input/%s/glpt_initial.0" ; # initial configurations

#                15    14  13   12    11   10    9   8   7    6    5   4   3   13  14    15

#                  0      1      2       3        4       5       6       7     8     9      10     11     12      13    14   15
set cf { 
{-45     0.002}
{-42     0.002}
{-35     0.002}
{-30     0.05 }
{-26.5   0.05 }
{-25     0.05 }
{-24     0.05 }
{-23     1    }
{-22     0.5  }
{-21     0.5  }
{-20     0.5  }
{-19     0.5  }
{-18     1    }
{-17.5   2    }
{-17     3    }
{-16.5   4    }
{-16     3    }
{-15.5   2    }
{-15     1    }
{-14     1    }
{-13     1    }
{-12     1    }
{-11     1    } 
{-10.5   1    }
{-10     1    }
{-9.5    1    }
{-9      1    }
{-8.5    1.5  }
{-8.3    3    }
{-8.15   6    }
}

proc replica_bias { i } {
  global num_replicas centerlist forcelist
  set center [lindex [lindex $cf $i] 0]
  set force  [lindex [lindex $cf $i] 1]
  return [list move "forceConstant \{ $force \} centers \{ $center \}"]
}

proc replica_neighbors { i } {
  global num_replicas
  if { $i % 2 } { set s -1 } { set s 1 }
  set result {}
  foreach { d } { $s -$s } {
    set j [expr $i + $d]
    if { $j < 0 || $j >= $num_replicas } {
      lappend result $i ; # swap with self
    } {
      lappend result $j
    }
  }
  return $result
}

# the following used only by show_replicas.vmd
set psf_file "glptpi2.psf"
set initial_pdb_file "glptpi2.pdb"
set fit_pdb_file "glptpi2.pdb"

